<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>//Ecrire une fonction qui affiche les x premiers nombres pairs ou impairs

func cinqPremierNombrePaire() {
    for var i in 1...10 {
        if ( i % 2 == 0){
            print(i) 
        }
    }
}
cinqPremierNombrePaire()



//Ecrire une fonction qui affiche les x premiers nombres de la suite Fibonacci 

func fibonacci(_ count: Int) {
    var a = 0
    var b = 1
    
    print("Les \(count) premiers nombres de la suite de Fibonacci :")
    
    for _ in 0..&lt;count {
        print(a)
        let temp = a
        a = b
        b = temp + b
    }
}

fibonacci(5)

//Ecrire une fonction qui calcule le factoriel d’un nombre x, utiliser 10 par défaut si aucun nombre n’est spécifié.   
func factoriel(_ x: Int = 10) -&gt; Int {
    if x &lt; 0 {
        return -1 // Le factoriel n'est pas défini pour les nombres négatifs
    } else if x == 0 || x == 1 {
        return 1
    } else {
        var result = 1
        for i in 2...x {
            result *= i
        }
        return result
    }
}

let nombre = 5
print("Factoriel de \(nombre) : \(factoriel(nombre))")



// Ecrire une fonction qui affiche les x premiers nombres premiers 

func isPrime(_ number: Int) -&gt; Bool {
    if number &lt;= 1 {
        return false
    }
    if number &lt;= 3 {
        return true
    }
    var i = 2
    while i * i &lt;= number {
        if number % i == 0 {
            return false
        }
        i += 1
    }
    return true
}

func printPrimes(_ count: Int) {
    print("Les \(count) premiers nombres premiers :")
    var foundPrimes = 0
    var currentNumber = 2
    while foundPrimes &lt; count {
        if isPrime(currentNumber) {
            print(currentNumber)
            foundPrimes += 1
        }
        currentNumber += 1
    }
}

// Utilisation de la fonction pour afficher les 10 premiers nombres premiers
printPrimes(10)
</string>
			<key>ModifiedRange</key>
			<string>{0, 1822}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
